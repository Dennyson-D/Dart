
Guia de Bolso Completo do Dart
==============================

1. Estrutura Básica
-------------------
void main() {
  print('Olá, Dart!');
}

2. Variáveis e Tipos
--------------------
int idade = 30;
double altura = 1.75;
String nome = "João";
bool ativo = true;
var cidade = "Curitiba";
const PI = 3.14;       // Constante conhecida em compilação
final data = DateTime.now(); // Definida uma única vez

3. Controle de Fluxo
--------------------
if (idade >= 18) {...} else {...}
for (int i = 0; i < 5; i++) {...}
while (condicao) {...}
do {...} while (condicao);
switch (opcao) {
  case 1: ...; break;
  default: ...;
}

4. Funções
----------
int soma(int a, int b) => a + b;
int multiplicar(int a, int b) => a * b;
void mostrarMensagem({String? texto, int vezes = 1}) {
  for (var i = 0; i < vezes; i++) print(texto);
}

5. Coleções
-----------
List<String> nomes = ['Ana', 'Carlos'];
nomes.add('João');

Set<int> numeros = {1, 2, 3};

Map<String, int> idades = {'Ana': 25};
idades['Maria'] = 20;

6. Null Safety
--------------
String? sobrenome = null;
sobrenome ??= "Desconhecido"; // atribui se for nulo
print(sobrenome ?? "Sem sobrenome"); // valor padrão
objeto?.metodo(); // acesso seguro

7. Classes e Objetos
--------------------
class Pessoa {
  String nome;
  int idade;
  Pessoa(this.nome, this.idade);
  void falar() => print("Olá, meu nome é $nome");
}
var p = Pessoa("João", 25);
p.falar();

8. Herança e Interfaces
-----------------------
class Animal {
  void emitirSom() => print("Som genérico");
}
class Cachorro extends Animal {
  @override
  void emitirSom() => print("Latindo");
}

9. Mixins
---------
mixin Nadador {
  void nadar() => print("Nadando");
}
class Peixe with Nadador {}

10. Extensões
-------------
extension StringExt on String {
  String primeiraMaiuscula() =>
      this[0].toUpperCase() + substring(1);
}
print("dart".primeiraMaiuscula()); // Dart

11. Generics
------------
List<int> numeros = [1, 2, 3];

12. Funções Assíncronas
-----------------------
Future<void> buscarDados() async {
  await Future.delayed(Duration(seconds: 2));
  print("Dados recebidos");
}

13. Tratamento de Erros
-----------------------
try {
  int resultado = 10 ~/ 0;
} catch (e) {
  print("Erro: $e");
} finally {
  print("Sempre executa");
}

14. Importações
---------------
import 'dart:math';         // Biblioteca padrão
import 'meu_arquivo.dart';  // Arquivo local

15. Operadores Úteis
--------------------
??   -> valor padrão
?.   -> acesso seguro
??=  -> atribui se nulo
~/   -> divisão inteira

16. Compilação e Execução
-------------------------
Executar:
dart run arquivo.dart

Compilar para web (JavaScript):
dart compile js arquivo.dart
